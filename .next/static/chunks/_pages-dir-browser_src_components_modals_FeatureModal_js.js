"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_pages-dir-browser_src_components_modals_FeatureModal_js"],{

/***/ "(pages-dir-browser)/./node_modules/dompurify/dist/purify.es.mjs":
/*!***************************************************!*\
  !*** ./node_modules/dompurify/dist/purify.es.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ purify)\n/* harmony export */ });\n/*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.4';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\n\n//# sourceMappingURL=purify.es.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./node_modules/dompurify/dist/purify.es.mjs\n"));

/***/ }),

/***/ "(pages-dir-browser)/./src/components/modals/FeatureModal.js":
/*!***********************************************!*\
  !*** ./src/components/modals/FeatureModal.js ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! styled-components */ \"(pages-dir-browser)/./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! framer-motion */ \"(pages-dir-browser)/./node_modules/framer-motion/dist/es/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_FaCheck_FaChevronLeft_FaChevronRight_FaInfoCircle_FaTimes_react_icons_fa__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=FaCheck,FaChevronLeft,FaChevronRight,FaInfoCircle,FaTimes!=!react-icons/fa */ \"(pages-dir-browser)/__barrel_optimize__?names=FaCheck,FaChevronLeft,FaChevronRight,FaInfoCircle,FaTimes!=!./node_modules/react-icons/fa/index.mjs\");\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dompurify */ \"(pages-dir-browser)/./node_modules/dompurify/dist/purify.es.mjs\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(pages-dir-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\nconst ModalOverlay = (0,styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div).withConfig({\n    displayName: \"FeatureModal__ModalOverlay\",\n    componentId: \"sc-bdd01b62-0\"\n})([\n    `position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.85);display:flex;align-items:center;justify-content:center;z-index:9000;backdrop-filter:blur(5px);will-change:opacity;padding:0;`\n]);\n_c = ModalOverlay;\nconst ModalContainer = (0,styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div).withConfig({\n    displayName: \"FeatureModal__ModalContainer\",\n    componentId: \"sc-bdd01b62-1\"\n})([\n    `width:95%;max-width:1200px;height:90vh;max-height:900px;background:rgba(25,23,36,0.85);border-radius:24px;box-shadow:0 25px 50px rgba(0,0,0,0.4);overflow:hidden;position:relative;display:flex;flex-direction:column;border:1px solid rgba(255,255,255,0.15);backdrop-filter:blur(10px);margin-top:60px;@media (max-width:768px){width:100%;height:100vh;max-height:none;border-radius:0;margin-top:0;padding-top:70px;overflow:hidden;}@media (max-width:480px){padding-top:60px;}&:before{content:'';position:absolute;top:-5px;left:-5px;right:-5px;bottom:-5px;background:linear-gradient(135deg,rgba(108,99,255,0.7) 0%,rgba(108,99,255,0.2) 50%,rgba(78,205,196,0.7) 100%);border-radius:28px;z-index:-1;opacity:0.7;filter:blur(8px);@media (max-width:768px){border-radius:0;top:0;left:0;right:0;bottom:0;}}&:focus{outline:none;border:1px solid var(--primary);box-shadow:0 25px 50px rgba(0,0,0,0.4),0 0 0 1px var(--primary);@media (max-width:768px){border:none;box-shadow:none;}}`\n]);\n_c1 = ModalContainer;\nconst TitleContainer = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__TitleContainer\",\n    componentId: \"sc-bdd01b62-2\"\n})([\n    `position:fixed !important;top:0;left:0;right:0;padding:20px 60px;z-index:9500 !important;display:flex;align-items:center;justify-content:center;background:rgba(25,23,36,0.95);backdrop-filter:blur(15px);height:80px;box-sizing:border-box;border-bottom:1px solid rgba(255,255,255,0.15);box-shadow:0 2px 10px rgba(0,0,0,0.3);@media (max-width:768px){padding:15px 50px;height:70px;}@media (max-width:480px){padding:10px 40px;height:60px;}&:after{content:'';position:absolute;bottom:0;left:0;right:0;height:1px;background:linear-gradient(to right,transparent,rgba(108,99,255,0.4),rgba(78,205,196,0.4),transparent);}`\n]);\n_c2 = TitleContainer;\nconst ModalTitle = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].h2.withConfig({\n    displayName: \"FeatureModal__ModalTitle\",\n    componentId: \"sc-bdd01b62-3\"\n})([\n    `font-size:2rem;font-weight:800;margin:0;letter-spacing:-0.5px;text-shadow:0 2px 10px rgba(0,0,0,0.8);color:white;text-align:center;@media (max-width:768px){font-size:1.5rem;padding-left:0;}`\n]);\n_c3 = ModalTitle;\nconst pulse = (0,styled_components__WEBPACK_IMPORTED_MODULE_3__.keyframes)([\n    `0%{box-shadow:0 0 0 0 rgba(108,99,255,0.7);transform:scale(1);}70%{box-shadow:0 0 0 10px rgba(108,99,255,0);transform:scale(1.05);}100%{box-shadow:0 0 0 0 rgba(108,99,255,0);transform:scale(1);}`\n]);\nconst InfoButton = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].button.withConfig({\n    displayName: \"FeatureModal__InfoButton\",\n    componentId: \"sc-bdd01b62-4\"\n})([\n    `position:fixed !important;top:20px;left:20px;width:40px;height:40px;background:rgba(0,0,0,0.6);border:1px solid rgba(255,255,255,0.2);border-radius:50%;display:flex;align-items:center;justify-content:center;color:white;font-size:20px;cursor:pointer;z-index:9600 !important;transition:all 0.3s ease;animation:`,\n    ` 2s infinite;@media (max-width:768px){width:36px;height:36px;font-size:18px;top:16px;left:16px;display:none;}&:hover{background:var(--primary);transform:scale(1.1);box-shadow:0 0 20px rgba(108,99,255,0.5);animation:none;}`\n], pulse);\n_c4 = InfoButton;\nconst CloseButton = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].button.withConfig({\n    displayName: \"FeatureModal__CloseButton\",\n    componentId: \"sc-bdd01b62-5\"\n})([\n    `position:fixed !important;top:20px;right:20px;width:40px;height:40px;background:rgba(0,0,0,0.6);border:1px solid rgba(255,255,255,0.2);border-radius:50%;display:flex;align-items:center;justify-content:center;color:white;font-size:20px;cursor:pointer;z-index:9600 !important;transition:all 0.3s ease;@media (max-width:768px){width:36px;height:36px;font-size:18px;top:16px;right:16px;}@media (max-width:480px){width:36px;height:36px;font-size:18px;}&:hover{background:var(--primary);transform:scale(1.1);box-shadow:0 0 20px rgba(108,99,255,0.5);}`\n]);\n_c5 = CloseButton;\nconst CarouselContainer = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__CarouselContainer\",\n    componentId: \"sc-bdd01b62-6\"\n})([\n    `flex:1;width:100%;position:relative;overflow:hidden;margin-top:80px;margin-bottom:80px;height:calc(100% - 160px);display:flex;flex-direction:column;justify-content:center;@media (max-width:768px){margin-top:0;margin-bottom:0;height:100%;}@media (max-width:480px){margin-top:0;margin-bottom:0;}`\n]);\n_c6 = CarouselContainer;\nconst Slide = (0,styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(framer_motion__WEBPACK_IMPORTED_MODULE_4__.motion.div).withConfig({\n    displayName: \"FeatureModal__Slide\",\n    componentId: \"sc-bdd01b62-7\"\n})([\n    `position:absolute;top:0;left:0;width:100%;height:100%;display:flex;flex-direction:column;justify-content:center;`\n]);\n_c7 = Slide;\nconst ImageContainer = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__ImageContainer\",\n    componentId: \"sc-bdd01b62-8\"\n})([\n    `width:100%;height:100%;position:relative;overflow:hidden;display:flex;justify-content:center;align-items:center;background-color:rgba(10,10,15,0.3);padding-top:0;@media (max-width:768px){height:45vh;min-height:250px;max-height:450px;padding-top:0;display:flex;justify-content:center;align-items:center;}@media (max-width:480px){height:40vh;min-height:220px;padding-top:0;}`\n]);\n_c8 = ImageContainer;\nconst FeatureImage = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__FeatureImage\",\n    componentId: \"sc-bdd01b62-9\"\n})([\n    `width:100%;height:100%;background-color:transparent;background-image:`,\n    `;background-size:contain;background-position:center;background-repeat:no-repeat;display:flex;justify-content:center;align-items:center;color:white;font-size:32px;font-weight:bold;position:relative;@media (max-width:768px){background-size:contain;background-position:center;}`,\n    ``\n], (props)=>props.imgSrc ? `url(${props.imgSrc})` : 'none', (props)=>props.imgSrc && `\n    font-size: 0;\n    &::after {\n      content: none;\n    }\n  `);\n_c9 = FeatureImage;\nconst ContentOverlay = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__ContentOverlay\",\n    componentId: \"sc-bdd01b62-10\"\n})([\n    `position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(15,14,22,0.97);display:flex;flex-direction:column;justify-content:flex-start;align-items:center;opacity:`,\n    `;pointer-events:`,\n    `;transition:opacity 0.3s ease;backdrop-filter:blur(20px);padding-top:20px;padding-left:40px;padding-right:40px;padding-bottom:20px;overflow-y:auto;box-sizing:border-box;-webkit-overflow-scrolling:touch;@media (max-width:768px){padding:10px 15px 70px;height:calc(100% - 0px);overflow-y:auto;}@media (max-width:480px){padding:10px 12px 60px;height:calc(100% - 0px);}&::-webkit-scrollbar{width:6px;}&::-webkit-scrollbar-track{background:rgba(0,0,0,0.1);border-radius:4px;}&::-webkit-scrollbar-thumb{background:rgba(108,99,255,0.3);border-radius:4px;&:hover{background:rgba(108,99,255,0.5);}}`\n], (props)=>props.$visible ? 1 : 0, (props)=>props.$visible ? 'auto' : 'none');\n_c10 = ContentOverlay;\nconst ContentContainer = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__ContentContainer\",\n    componentId: \"sc-bdd01b62-11\"\n})([\n    `max-width:1000px;width:100%;display:flex;flex-direction:row;align-items:flex-start;gap:30px;padding-bottom:10px;@media (max-width:768px){flex-direction:column;align-items:center;gap:10px;width:100%;padding:0 0 10px 0;}@media (max-width:480px){padding:0 0 10px 0;}`\n]);\n_c11 = ContentContainer;\nconst InfoImageContainer = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__InfoImageContainer\",\n    componentId: \"sc-bdd01b62-12\"\n})([\n    `width:40%;max-width:400px;height:260px;border-radius:12px;overflow:visible;position:sticky;top:20px;align-self:flex-start;background:rgba(10,10,15,0.4);border:1px solid rgba(255,255,255,0.06);box-shadow:0 10px 30px rgba(0,0,0,0.2);@media (max-width:768px){width:100%;max-width:100%;height:auto;aspect-ratio:16/10;position:relative;top:0;margin-bottom:10px;flex-shrink:0;}@media (max-width:480px){border-radius:8px;margin-bottom:10px;aspect-ratio:16/9;}&:hover{z-index:10;}`\n]);\n_c12 = InfoImageContainer;\nconst InfoFeatureImage = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__InfoFeatureImage\",\n    componentId: \"sc-bdd01b62-13\"\n})([\n    `width:100%;height:100%;background-color:transparent;background-image:`,\n    `;background-size:contain;background-position:center;background-repeat:no-repeat;display:flex;justify-content:center;align-items:center;color:white;font-size:24px;font-weight:bold;cursor:pointer;transition:transform 0.3s ease;border-radius:12px;overflow:hidden;@media (max-width:768px){font-size:20px;background-size:contain;border-radius:8px;transform:none !important;box-shadow:none !important;}&:hover{transform:scale(1.1);box-shadow:0 15px 35px rgba(0,0,0,0.25);@media (max-width:768px){transform:none;box-shadow:none;}}`,\n    ``\n], (props)=>props.imgSrc ? `url(${props.imgSrc})` : 'none', (props)=>props.imgSrc && `\n    font-size: 0;\n    &::after {\n      content: none;\n    }\n  `);\n_c13 = InfoFeatureImage;\nconst ContentTextContainer = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__ContentTextContainer\",\n    componentId: \"sc-bdd01b62-14\"\n})([\n    `flex:1;display:flex;flex-direction:column;overflow:visible;padding-right:10px;@media (max-width:768px){width:100%;padding-right:0;padding-top:0;flex:1;min-height:0;height:auto;padding-bottom:0;overflow:visible;}@media (max-width:480px){padding-top:0;padding-bottom:0;}`\n]);\n_c14 = ContentTextContainer;\nconst FeatureDescription = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__FeatureDescription\",\n    componentId: \"sc-bdd01b62-15\"\n})([\n    `font-size:clamp(0.9rem,1.5vw,1.1rem);line-height:1.6;color:rgba(255,255,255,0.95);flex:1;min-height:0;h3{font-size:clamp(1.4rem,2vw,1.7rem);font-weight:700;margin-top:0;margin-bottom:10px;background:linear-gradient(135deg,#6c63ff,#4ecdc4);-webkit-background-clip:text;-webkit-text-fill-color:transparent;letter-spacing:-0.5px;display:inline-block;}p{margin-bottom:10px;}ul{padding-left:20px;margin-top:8px;margin-bottom:10px;}li{margin-bottom:8px;position:relative;@media (max-width:480px){margin-bottom:12px;}}p.attribution{font-style:italic;opacity:0.7;font-size:0.9em;margin-top:12px;margin-bottom:10px;}@media (max-width:768px){width:100%;margin-top:0;padding-bottom:0;}@media (max-width:480px){font-size:1rem;margin-top:0;padding-bottom:0;h3{font-size:1.5rem;margin-bottom:15px;}ul{padding-left:15px;}}`\n]);\n_c15 = FeatureDescription;\nconst CarouselControls = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__CarouselControls\",\n    componentId: \"sc-bdd01b62-16\"\n})([\n    `display:flex;align-items:center;justify-content:center;padding:20px;height:80px;box-sizing:border-box;background:rgba(25,23,36,0.9);border-top:1px solid rgba(255,255,255,0.05);position:absolute;bottom:0;left:0;right:0;z-index:9400;@media (max-width:768px){height:70px;padding:15px;position:fixed;bottom:0;}@media (max-width:480px){height:60px;padding:10px;}&:before{content:'';position:absolute;top:0;left:0;right:0;height:1px;background:linear-gradient(to right,transparent,rgba(108,99,255,0.3),rgba(78,205,196,0.3),transparent);}`\n]);\n_c16 = CarouselControls;\nconst ControlButton = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].button.withConfig({\n    displayName: \"FeatureModal__ControlButton\",\n    componentId: \"sc-bdd01b62-17\"\n})([\n    `width:50px;height:50px;border-radius:50%;background:rgba(20,18,30,0.5);border:1px solid rgba(255,255,255,0.1);color:white;font-size:20px;display:flex;align-items:center;justify-content:center;cursor:pointer;transition:all 0.3s ease;@media (max-width:768px){width:44px;height:44px;font-size:18px;}@media (max-width:480px){width:40px;height:40px;font-size:16px;}&:hover{background:var(--primary);transform:scale(1.1);box-shadow:0 0 20px rgba(108,99,255,0.5);}&:disabled{opacity:0.3;cursor:not-allowed;&:hover{background:rgba(20,18,30,0.5);transform:none;box-shadow:none;}}`\n]);\n_c17 = ControlButton;\nconst ProgressIndicator = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__ProgressIndicator\",\n    componentId: \"sc-bdd01b62-18\"\n})([\n    `display:flex;align-items:center;justify-content:center;gap:12px;flex:1;margin:0 20px;@media (max-width:768px){gap:10px;margin:0 15px;}@media (max-width:480px){gap:8px;margin:0 10px;}`\n]);\n_c18 = ProgressIndicator;\nconst IndicatorDot = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].button.withConfig({\n    displayName: \"FeatureModal__IndicatorDot\",\n    componentId: \"sc-bdd01b62-19\"\n})([\n    `width:12px;height:12px;border-radius:50%;background:`,\n    `;border:none;cursor:pointer;transition:all 0.3s ease;box-shadow:`,\n    `;transform:`,\n    `;@media (max-width:480px){width:10px;height:10px;}&:hover{background:`,\n    `;}`\n], (props)=>props.$active ? 'var(--primary)' : 'rgba(255, 255, 255, 0.2)', (props)=>props.$active ? '0 0 8px rgba(108, 99, 255, 0.6)' : 'none', (props)=>props.$active ? 'scale(1.2)' : 'scale(1)', (props)=>props.$active ? 'var(--primary)' : 'rgba(255, 255, 255, 0.4)');\n_c19 = IndicatorDot;\n// Helper function to safely parse HTML content\nconst parseHtml = (htmlContent)=>{\n    // If the content is already a React element, return it\n    if (/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().isValidElement(htmlContent)) {\n        return htmlContent;\n    }\n    // If it's a string that might contain HTML\n    if (typeof htmlContent === 'string') {\n        // Clean up HTML before sanitizing (fix common issues)\n        let cleanHtml = htmlContent.replace(/&nbsp;/g, ' ').replace(/<br>/g, '<br />').replace(/<p>\\s*<\\/p>/g, '');\n        // Ensure headings are properly formatted\n        if (!cleanHtml.includes('<h3>') && !cleanHtml.includes('<h2>')) {\n            // Extract first sentence as title if no heading exists\n            const firstPeriod = cleanHtml.indexOf('.');\n            if (firstPeriod > 10 && firstPeriod < 100) {\n                const title = cleanHtml.substring(0, firstPeriod + 1);\n                const rest = cleanHtml.substring(firstPeriod + 1);\n                cleanHtml = `<h3>${title}</h3>${rest}`;\n            }\n        }\n        // Sanitize the HTML to prevent XSS\n        const sanitizedHtml = dompurify__WEBPACK_IMPORTED_MODULE_2__[\"default\"].sanitize(cleanHtml, {\n            USE_PROFILES: {\n                html: true\n            },\n            ALLOWED_TAGS: [\n                'h1',\n                'h2',\n                'h3',\n                'h4',\n                'h5',\n                'p',\n                'br',\n                'ul',\n                'ol',\n                'li',\n                'strong',\n                'em',\n                'b',\n                'i',\n                'a'\n            ],\n            ALLOWED_ATTR: [\n                'href',\n                'target',\n                'rel'\n            ]\n        });\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            dangerouslySetInnerHTML: {\n                __html: sanitizedHtml\n            }\n        }, void 0, false, {\n            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n            lineNumber: 740,\n            columnNumber: 12\n        }, undefined);\n    }\n    return '';\n};\n// Helper function to extract key features\nconst extractKeyFeatures = (detailedDescription)=>{\n    if (!detailedDescription) return [];\n    // If there's a ul element, extract its contents\n    if (detailedDescription?.props?.children) {\n        const ulElement = Array.isArray(detailedDescription.props.children) ? detailedDescription.props.children.find((child)=>child.type === 'ul') : null;\n        if (ulElement && ulElement.props && ulElement.props.children) {\n            return Array.isArray(ulElement.props.children) ? ulElement.props.children.map((li)=>typeof li.props.children === 'string' ? li.props.children : Array.isArray(li.props.children) ? li.props.children.map((child)=>typeof child === 'string' ? child : '').join('') : '') : [\n                ulElement.props.children\n            ];\n        }\n    }\n    // If no ul element found, create some default features from the description\n    if (typeof detailedDescription === 'string') {\n        const sentences = detailedDescription.split('.');\n        return sentences.filter((s)=>s.trim().length > 20 && s.trim().length < 100).slice(0, 3);\n    }\n    return [];\n};\n// Add this new component for better image debugging\nconst ImageDebug = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__ImageDebug\",\n    componentId: \"sc-bdd01b62-20\"\n})([\n    `position:absolute;bottom:10px;left:10px;background:rgba(0,0,0,0.7);color:white;padding:5px 8px;border-radius:4px;font-size:12px;z-index:100;opacity:0.7;`\n]);\n_c20 = ImageDebug;\n// Feature descriptions object for detailed content\nconst featureDescriptions = {\n    'Advanced Voice Handling': `<h3>Advanced Voice Handling</h3>\n    <p>Take complete control over your chord voicings with our sophisticated voice leading system, designed to give you both precise control and intelligent automation.</p>\n    <ul>\n      <li><strong>Intelligent Voice Leading</strong> - Automatically generate smooth transitions between chords that follow proper voice leading principles.</li>\n      <li><strong>Custom Voice Assignments</strong> - Manually assign specific notes to each voice for complete control over your harmonic expression.</li>\n      <li><strong>Voice Range Controls</strong> - Define upper and lower limits for each voice to ensure playability and optimal sound for your target instruments.</li>\n      <li><strong>Voice Motion Rules</strong> - Apply classical voice leading rules like avoiding parallel fifths or controlling voice crossing between parts.</li>\n      <li><strong>Multi-Instrument Voicing</strong> - Distribute voices across different instrument groups with intelligent orchestration suggestions.</li>\n      <li><strong>Style-Based Voicing Templates</strong> - Apply genre-specific voicing patterns like jazz, classical, or pop with a single click.</li>\n    </ul>\n    <p>Perfect for composers and songwriters looking for both intuitive control and professional results without requiring extensive music theory knowledge.</p>`\n};\n// Function to get image path based on feature title\nconst getImagePath = (title)=>{\n    if (!title) return null;\n    // Explicitly use absolute paths with the public URL\n    const publicUrl = process.env.PUBLIC_URL || '';\n    // Make Progression Timeline use the same image as Song Builder\n    if (title === \"Progression Timeline\") {\n        return `${publicUrl}/images/song_view.png`;\n    }\n    const titleToImage = {\n        'Song Builder': `${publicUrl}/images/song_view.png`,\n        'Harmony Palettes': `${publicUrl}/images/palette_view.png`,\n        'Advanced Voice Handling': `${publicUrl}/images/advanced_voicing.png`,\n        'Dynamic Pattern Editor': `${publicUrl}/images/pattern_view.png`,\n        'Voicing Generator': `${publicUrl}/images/voicing_view.png`\n    };\n    // Fallback images for any feature without a specific image\n    const fallbackImages = [\n        `${publicUrl}/images/song_view.png`,\n        `${publicUrl}/images/palette_view.png`,\n        `${publicUrl}/images/pattern_view.png`,\n        `${publicUrl}/images/voicing_view.png`\n    ];\n    let imagePath = titleToImage[title];\n    // If no specific image is found, use a fallback based on the title's hash\n    if (!imagePath) {\n        const hash = title.split('').reduce((acc, char)=>acc + char.charCodeAt(0), 0);\n        imagePath = fallbackImages[hash % fallbackImages.length];\n        console.log(`No specific image for \"${title}\", using fallback: ${imagePath}`);\n    } else {\n        console.log(`For title \"${title}\", using image path: ${imagePath}`);\n    }\n    return imagePath;\n};\n// Add a Loading indicator component with proper styling\nconst LoadingIndicator = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__LoadingIndicator\",\n    componentId: \"sc-bdd01b62-21\"\n})([\n    `position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);display:flex;flex-direction:column;align-items:center;gap:15px;@media (max-width:480px){gap:10px;}`\n]);\n_c21 = LoadingIndicator;\nconst LoadingText = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__LoadingText\",\n    componentId: \"sc-bdd01b62-22\"\n})([\n    `color:rgba(255,255,255,0.7);font-size:16px;@media (max-width:480px){font-size:14px;}`\n]);\n_c22 = LoadingText;\n// Improved spinner for better mobile visibility\nconst loadingSpinAnimation = (0,styled_components__WEBPACK_IMPORTED_MODULE_3__.keyframes)([\n    `0%{transform:rotate(0deg);}100%{transform:rotate(360deg);}`\n]);\nconst LoadingSpinner = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__LoadingSpinner\",\n    componentId: \"sc-bdd01b62-23\"\n})([\n    `width:40px;height:40px;border:3px solid rgba(255,255,255,0.1);border-top:3px solid var(--primary);border-radius:50%;animation:`,\n    ` 1s linear infinite;@media (max-width:480px){width:30px;height:30px;border-width:2px;}`\n], loadingSpinAnimation);\n_c23 = LoadingSpinner;\n// Add a visual feedback indicator for swipe actions on mobile\nconst SwipeIndicator = styled_components__WEBPACK_IMPORTED_MODULE_3__[\"default\"].div.withConfig({\n    displayName: \"FeatureModal__SwipeIndicator\",\n    componentId: \"sc-bdd01b62-24\"\n})([\n    `position:absolute;top:50%;transform:translateY(-50%);display:`,\n    `;align-items:center;justify-content:center;width:50px;height:50px;border-radius:50%;background:rgba(0,0,0,0.6);color:white;font-size:24px;z-index:20;pointer-events:none;opacity:0.8;&.left{left:20px;}&.right{right:20px;}@media (max-width:480px){width:40px;height:40px;font-size:20px;}`\n], (props)=>props.$visible ? 'flex' : 'none');\n_c24 = SwipeIndicator;\nconst FeatureModal = ({ features, initialIndex = 0, isOpen, onClose })=>{\n    _s();\n    // Find the Advanced Voice Handling feature and update its description before rendering\n    const updatedFeatures = features.map((feature)=>{\n        if (feature.title === \"Advanced Voice Handling\") {\n            return {\n                ...feature,\n                detailedDescription: `\n          <h3>Complete Control Over Every Voice</h3>\n          <p>Advanced Voice Handling provides granular control over each individual voice in your composition. Manage voice count, behavior, interaction, and routing to create complex arrangements with complete creative freedom.</p>\n          \n          <h3 style=\"margin-bottom: 0.5rem;\">Key Features:</h3>\n          <ul style=\"margin-top: 0.5rem;\">\n            <li><strong>Dynamic Voice Count</strong> for arrangement flexibility - Add or remove voices for different textures</li>\n            <li><strong>Smooth Voice Leading</strong> to control how voices move together - Options for parallel, contrary, or independent motion</li>\n            <li><strong>Per-Voice MIDI Channel Routing</strong> for multi-instrument setups - Send voices to different instruments</li>\n            <li><strong>Voice Range Constraints</strong> for instrument-appropriate writing - Set upper and lower limits for each voice</li>\n            <li><strong>Designated Bass Channel</strong> for foundation control - Discrete controls for pedal tones and voice leading</li>\n            <li><strong>Voice / Channel Matrix</strong> for effortless MIDI routing - Visually map voices to MIDI channels and instruments</li>\n          </ul>\n        `\n            };\n        }\n        return feature;\n    });\n    const [currentIndex, setCurrentIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialIndex);\n    const [infoVisible, setInfoVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [direction, setDirection] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [windowSize, setWindowSize] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: window.innerWidth,\n        height: window.innerHeight\n    });\n    const [imagesLoaded, setImagesLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [imageErrors, setImageErrors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [debugMode, setDebugMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [touchStart, setTouchStart] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [touchEnd, setTouchEnd] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [swipeDirection, setSwipeDirection] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const modalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Update currentIndex when initialIndex changes or modal opens\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FeatureModal.useEffect\": ()=>{\n            if (isOpen) {\n                setCurrentIndex(initialIndex);\n            }\n        }\n    }[\"FeatureModal.useEffect\"], [\n        initialIndex,\n        isOpen\n    ]);\n    // Improved body overflow management to prevent memory leaks\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FeatureModal.useEffect\": ()=>{\n            const originalStyle = window.getComputedStyle(document.body).overflow;\n            if (isOpen) {\n                document.body.style.overflow = 'hidden';\n            } else {\n                document.body.style.overflow = originalStyle;\n            }\n            return ({\n                \"FeatureModal.useEffect\": ()=>{\n                    document.body.style.overflow = originalStyle;\n                }\n            })[\"FeatureModal.useEffect\"];\n        }\n    }[\"FeatureModal.useEffect\"], [\n        isOpen\n    ]);\n    // Handle window resize\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FeatureModal.useEffect\": ()=>{\n            const handleResize = {\n                \"FeatureModal.useEffect.handleResize\": ()=>{\n                    setWindowSize({\n                        width: window.innerWidth,\n                        height: window.innerHeight\n                    });\n                }\n            }[\"FeatureModal.useEffect.handleResize\"];\n            window.addEventListener('resize', handleResize);\n            return ({\n                \"FeatureModal.useEffect\": ()=>window.removeEventListener('resize', handleResize)\n            })[\"FeatureModal.useEffect\"];\n        }\n    }[\"FeatureModal.useEffect\"], []);\n    // Enhanced touch handlers with visual feedback\n    const handleTouchStart = (e)=>{\n        setTouchStart(e.targetTouches[0].clientX);\n        setSwipeDirection(null);\n    };\n    const handleTouchMove = (e)=>{\n        const currentTouch = e.targetTouches[0].clientX;\n        setTouchEnd(currentTouch);\n        if (touchStart && currentTouch) {\n            const diff = touchStart - currentTouch;\n            if (diff > 30) {\n                setSwipeDirection('left');\n            } else if (diff < -30) {\n                setSwipeDirection('right');\n            } else {\n                setSwipeDirection(null);\n            }\n        }\n    };\n    const handleTouchEnd = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FeatureModal.useCallback[handleTouchEnd]\": ()=>{\n            if (!touchStart || !touchEnd) return;\n            const distance = touchStart - touchEnd;\n            const isLeftSwipe = distance > 50;\n            const isRightSwipe = distance < -50;\n            if (isLeftSwipe && features.length > 1) {\n                handleNext();\n            } else if (isRightSwipe && features.length > 1) {\n                handlePrevious();\n            }\n            setTouchStart(null);\n            setTouchEnd(null);\n        }\n    }[\"FeatureModal.useCallback[handleTouchEnd]\"], [\n        touchStart,\n        touchEnd,\n        features.length\n    ]);\n    // Preload images for better mobile experience\n    const preloadNextImages = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FeatureModal.useCallback[preloadNextImages]\": ()=>{\n            const currentIdx = currentIndex;\n            const nextIdx = (currentIdx + 1) % features.length;\n            const prevIdx = (currentIdx - 1 + features.length) % features.length;\n            // Preload current, next and previous images\n            [\n                currentIdx,\n                nextIdx,\n                prevIdx\n            ].forEach({\n                \"FeatureModal.useCallback[preloadNextImages]\": (idx)=>{\n                    const feature = features[idx];\n                    if (!feature) return;\n                    const { title, image: featureImage } = feature;\n                    const imagePath = featureImage || getImagePath(title);\n                    if (imagePath && !imagesLoaded[title] && !imageErrors[title]) {\n                        const img = new Image();\n                        img.onload = ({\n                            \"FeatureModal.useCallback[preloadNextImages]\": ()=>{\n                                setImagesLoaded({\n                                    \"FeatureModal.useCallback[preloadNextImages]\": (prev)=>({\n                                            ...prev,\n                                            [title]: true\n                                        })\n                                }[\"FeatureModal.useCallback[preloadNextImages]\"]);\n                            }\n                        })[\"FeatureModal.useCallback[preloadNextImages]\"];\n                        img.onerror = ({\n                            \"FeatureModal.useCallback[preloadNextImages]\": ()=>{\n                                setImageErrors({\n                                    \"FeatureModal.useCallback[preloadNextImages]\": (prev)=>({\n                                            ...prev,\n                                            [title]: true\n                                        })\n                                }[\"FeatureModal.useCallback[preloadNextImages]\"]);\n                            }\n                        })[\"FeatureModal.useCallback[preloadNextImages]\"];\n                        img.src = imagePath;\n                    }\n                }\n            }[\"FeatureModal.useCallback[preloadNextImages]\"]);\n        }\n    }[\"FeatureModal.useCallback[preloadNextImages]\"], [\n        features,\n        currentIndex,\n        imagesLoaded,\n        imageErrors\n    ]);\n    // Call the preload function when currentIndex changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FeatureModal.useEffect\": ()=>{\n            if (isOpen) {\n                preloadNextImages();\n            }\n        }\n    }[\"FeatureModal.useEffect\"], [\n        currentIndex,\n        isOpen,\n        preloadNextImages\n    ]);\n    // Toggle debug mode with Shift + D\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FeatureModal.useEffect\": ()=>{\n            const handleDebugToggle = {\n                \"FeatureModal.useEffect.handleDebugToggle\": (e)=>{\n                    if (e.shiftKey && e.key === 'D') {\n                        setDebugMode({\n                            \"FeatureModal.useEffect.handleDebugToggle\": (prev)=>!prev\n                        }[\"FeatureModal.useEffect.handleDebugToggle\"]);\n                    }\n                }\n            }[\"FeatureModal.useEffect.handleDebugToggle\"];\n            window.addEventListener('keydown', handleDebugToggle);\n            return ({\n                \"FeatureModal.useEffect\": ()=>window.removeEventListener('keydown', handleDebugToggle)\n            })[\"FeatureModal.useEffect\"];\n        }\n    }[\"FeatureModal.useEffect\"], []);\n    // Define these functions with useCallback before using them in useEffect\n    const handleNext = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FeatureModal.useCallback[handleNext]\": ()=>{\n            // Prevent rapid multiple clicks\n            if (direction !== 0) return;\n            setDirection(1);\n            setCurrentIndex({\n                \"FeatureModal.useCallback[handleNext]\": (prev)=>(prev + 1) % features.length\n            }[\"FeatureModal.useCallback[handleNext]\"]);\n        }\n    }[\"FeatureModal.useCallback[handleNext]\"], [\n        features.length,\n        direction\n    ]);\n    const handlePrevious = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FeatureModal.useCallback[handlePrevious]\": ()=>{\n            // Prevent rapid multiple clicks\n            if (direction !== 0) return;\n            setDirection(-1);\n            setCurrentIndex({\n                \"FeatureModal.useCallback[handlePrevious]\": (prev)=>(prev - 1 + features.length) % features.length\n            }[\"FeatureModal.useCallback[handlePrevious]\"]);\n        }\n    }[\"FeatureModal.useCallback[handlePrevious]\"], [\n        features.length,\n        direction\n    ]);\n    // Reset direction after animation completes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FeatureModal.useEffect\": ()=>{\n            if (direction !== 0) {\n                const timer = setTimeout({\n                    \"FeatureModal.useEffect.timer\": ()=>{\n                        setDirection(0);\n                    }\n                }[\"FeatureModal.useEffect.timer\"], 500); // Match this with your animation duration\n                return ({\n                    \"FeatureModal.useEffect\": ()=>clearTimeout(timer)\n                })[\"FeatureModal.useEffect\"];\n            }\n        }\n    }[\"FeatureModal.useEffect\"], [\n        direction,\n        currentIndex\n    ]);\n    const handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"FeatureModal.useCallback[handleKeyDown]\": (e)=>{\n            if (e.key === 'ArrowRight') {\n                handleNext();\n            } else if (e.key === 'ArrowLeft') {\n                handlePrevious();\n            } else if (e.key === 'Escape') {\n                onClose();\n            }\n        }\n    }[\"FeatureModal.useCallback[handleKeyDown]\"], [\n        handleNext,\n        handlePrevious,\n        onClose\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"FeatureModal.useEffect\": ()=>{\n            if (isOpen) {\n                document.addEventListener('keydown', handleKeyDown);\n                return ({\n                    \"FeatureModal.useEffect\": ()=>{\n                        document.removeEventListener('keydown', handleKeyDown);\n                    }\n                })[\"FeatureModal.useEffect\"];\n            }\n        }\n    }[\"FeatureModal.useEffect\"], [\n        isOpen,\n        handleKeyDown\n    ]);\n    const handleDotClick = (index)=>{\n        setDirection(index > currentIndex ? 1 : -1);\n        setCurrentIndex(index);\n    };\n    const handleBackdropClick = (e)=>{\n        if (e.target === e.currentTarget) {\n            onClose();\n        }\n    };\n    const toggleInfo = ()=>{\n        setInfoVisible(!infoVisible);\n    };\n    const currentFeature = updatedFeatures[currentIndex] || {};\n    const { title, detailedDescription, image: featureImage } = currentFeature;\n    const keyFeatures = extractKeyFeatures(detailedDescription || '');\n    // Use the provided image or get one based on title\n    const imagePath = featureImage || getImagePath(title);\n    const isImageLoaded = imagesLoaded[title] || false;\n    const hasImageError = imageErrors[title] || false;\n    // We'll keep this function but won't use it for the FeatureImage background\n    // eslint-disable-next-line no-unused-vars\n    const getFeatureColor = (index)=>{\n        const colors = [\n            '#4A90E2',\n            '#50E3C2',\n            '#F5A623',\n            '#D0021B',\n            '#9013FE',\n            '#7ED321' // Voice Handling - Green\n        ];\n        return colors[index % colors.length];\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.AnimatePresence, {\n        children: isOpen && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ModalOverlay, {\n            initial: {\n                opacity: 0\n            },\n            animate: {\n                opacity: 1\n            },\n            exit: {\n                opacity: 0\n            },\n            onClick: handleBackdropClick,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ModalContainer, {\n                ref: modalRef,\n                initial: {\n                    scale: 0.9,\n                    opacity: 0,\n                    willChange: 'transform, opacity'\n                },\n                animate: {\n                    scale: 1,\n                    opacity: 1\n                },\n                exit: {\n                    scale: 0.9,\n                    opacity: 0\n                },\n                transition: {\n                    type: \"spring\",\n                    damping: 20\n                },\n                onClick: (e)=>e.stopPropagation(),\n                tabIndex: -1,\n                onKeyDown: handleKeyDown,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TitleContainer, {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ModalTitle, {\n                            children: title\n                        }, void 0, false, {\n                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                            lineNumber: 1199,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                        lineNumber: 1198,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(InfoButton, {\n                        onClick: toggleInfo,\n                        \"aria-label\": \"Show feature details\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaCheck_FaChevronLeft_FaChevronRight_FaInfoCircle_FaTimes_react_icons_fa__WEBPACK_IMPORTED_MODULE_5__.FaInfoCircle, {}, void 0, false, {\n                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                            lineNumber: 1203,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                        lineNumber: 1202,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CloseButton, {\n                        onClick: onClose,\n                        \"aria-label\": \"Close modal\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaCheck_FaChevronLeft_FaChevronRight_FaInfoCircle_FaTimes_react_icons_fa__WEBPACK_IMPORTED_MODULE_5__.FaTimes, {}, void 0, false, {\n                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                            lineNumber: 1207,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                        lineNumber: 1206,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CarouselContainer, {\n                        ref: containerRef,\n                        onTouchStart: handleTouchStart,\n                        onTouchMove: handleTouchMove,\n                        onTouchEnd: handleTouchEnd,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SwipeIndicator, {\n                                className: \"left\",\n                                $visible: swipeDirection === 'right',\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaCheck_FaChevronLeft_FaChevronRight_FaInfoCircle_FaTimes_react_icons_fa__WEBPACK_IMPORTED_MODULE_5__.FaChevronLeft, {}, void 0, false, {\n                                    fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                    lineNumber: 1218,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                lineNumber: 1217,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(SwipeIndicator, {\n                                className: \"right\",\n                                $visible: swipeDirection === 'left',\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaCheck_FaChevronLeft_FaChevronRight_FaInfoCircle_FaTimes_react_icons_fa__WEBPACK_IMPORTED_MODULE_5__.FaChevronRight, {}, void 0, false, {\n                                    fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                    lineNumber: 1222,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                lineNumber: 1221,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_4__.AnimatePresence, {\n                                initial: false,\n                                custom: direction,\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Slide, {\n                                    custom: direction,\n                                    initial: {\n                                        x: direction > 0 ? '100%' : '-100%',\n                                        opacity: 0\n                                    },\n                                    animate: {\n                                        x: 0,\n                                        opacity: 1\n                                    },\n                                    exit: {\n                                        x: direction < 0 ? '100%' : '-100%',\n                                        opacity: 0\n                                    },\n                                    transition: {\n                                        type: \"spring\",\n                                        stiffness: 300,\n                                        damping: 30\n                                    },\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ImageContainer, {\n                                            children: [\n                                                debugMode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ImageDebug, {\n                                                    children: [\n                                                        \"Path: \",\n                                                        imagePath || 'None',\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                            lineNumber: 1237,\n                                                            columnNumber: 52\n                                                        }, undefined),\n                                                        \"Loaded: \",\n                                                        isImageLoaded ? 'Yes' : 'No',\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                                                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                            lineNumber: 1238,\n                                                            columnNumber: 63\n                                                        }, undefined),\n                                                        \"Error: \",\n                                                        hasImageError ? 'Yes' : 'No'\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                    lineNumber: 1236,\n                                                    columnNumber: 23\n                                                }, undefined),\n                                                imagePath && !isImageLoaded && !hasImageError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LoadingIndicator, {\n                                                    children: [\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LoadingSpinner, {}, void 0, false, {\n                                                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                            lineNumber: 1244,\n                                                            columnNumber: 25\n                                                        }, undefined),\n                                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LoadingText, {\n                                                            children: \"Loading image...\"\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                            lineNumber: 1245,\n                                                            columnNumber: 25\n                                                        }, undefined)\n                                                    ]\n                                                }, void 0, true, {\n                                                    fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                    lineNumber: 1243,\n                                                    columnNumber: 23\n                                                }, undefined),\n                                                hasImageError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LoadingIndicator, {\n                                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LoadingText, {\n                                                        children: \"Failed to load image\"\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                        lineNumber: 1250,\n                                                        columnNumber: 25\n                                                    }, undefined)\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                    lineNumber: 1249,\n                                                    columnNumber: 23\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FeatureImage, {\n                                                    imgSrc: isImageLoaded ? imagePath : null,\n                                                    onClick: toggleInfo,\n                                                    style: {\n                                                        cursor: 'pointer'\n                                                    },\n                                                    children: (!imagePath || hasImageError) && features[currentIndex].title\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                    lineNumber: 1253,\n                                                    columnNumber: 21\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                            lineNumber: 1234,\n                                            columnNumber: 19\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ContentOverlay, {\n                                            $visible: infoVisible,\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ContentContainer, {\n                                                children: [\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(InfoImageContainer, {\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(InfoFeatureImage, {\n                                                            imgSrc: isImageLoaded ? imagePath : null,\n                                                            onClick: toggleInfo,\n                                                            children: (!imagePath || hasImageError) && features[currentIndex].title\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                            lineNumber: 1265,\n                                                            columnNumber: 25\n                                                        }, undefined)\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                        lineNumber: 1264,\n                                                        columnNumber: 23\n                                                    }, undefined),\n                                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ContentTextContainer, {\n                                                        children: detailedDescription && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FeatureDescription, {\n                                                            children: parseHtml(detailedDescription)\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                            lineNumber: 1275,\n                                                            columnNumber: 27\n                                                        }, undefined)\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                        lineNumber: 1273,\n                                                        columnNumber: 23\n                                                    }, undefined)\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                                lineNumber: 1263,\n                                                columnNumber: 21\n                                            }, undefined)\n                                        }, void 0, false, {\n                                            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                            lineNumber: 1262,\n                                            columnNumber: 19\n                                        }, undefined)\n                                    ]\n                                }, currentIndex, true, {\n                                    fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                    lineNumber: 1226,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                lineNumber: 1225,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                        lineNumber: 1210,\n                        columnNumber: 13\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CarouselControls, {\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ControlButton, {\n                                onClick: handlePrevious,\n                                disabled: features.length <= 1,\n                                \"aria-label\": \"Previous feature\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaCheck_FaChevronLeft_FaChevronRight_FaInfoCircle_FaTimes_react_icons_fa__WEBPACK_IMPORTED_MODULE_5__.FaChevronLeft, {}, void 0, false, {\n                                    fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                    lineNumber: 1292,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                lineNumber: 1287,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ProgressIndicator, {\n                                children: features.map((_, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(IndicatorDot, {\n                                        $active: index === currentIndex,\n                                        onClick: ()=>handleDotClick(index),\n                                        \"aria-label\": `Go to feature ${index + 1}`\n                                    }, index, false, {\n                                        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                        lineNumber: 1297,\n                                        columnNumber: 19\n                                    }, undefined))\n                            }, void 0, false, {\n                                fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                lineNumber: 1295,\n                                columnNumber: 15\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ControlButton, {\n                                onClick: handleNext,\n                                disabled: features.length <= 1,\n                                \"aria-label\": \"Next feature\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_FaCheck_FaChevronLeft_FaChevronRight_FaInfoCircle_FaTimes_react_icons_fa__WEBPACK_IMPORTED_MODULE_5__.FaChevronRight, {}, void 0, false, {\n                                    fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                    lineNumber: 1311,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                                lineNumber: 1306,\n                                columnNumber: 15\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                        lineNumber: 1286,\n                        columnNumber: 13\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n                lineNumber: 1188,\n                columnNumber: 11\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n            lineNumber: 1182,\n            columnNumber: 9\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/rjmacbookpro/Development/cymasphere-website/src/components/modals/FeatureModal.js\",\n        lineNumber: 1180,\n        columnNumber: 5\n    }, undefined);\n};\n_s(FeatureModal, \"Hjj1XU30Wr81wqB0MDTjOSPX/yQ=\");\n_c25 = FeatureModal;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FeatureModal);\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25;\n$RefreshReg$(_c, \"ModalOverlay\");\n$RefreshReg$(_c1, \"ModalContainer\");\n$RefreshReg$(_c2, \"TitleContainer\");\n$RefreshReg$(_c3, \"ModalTitle\");\n$RefreshReg$(_c4, \"InfoButton\");\n$RefreshReg$(_c5, \"CloseButton\");\n$RefreshReg$(_c6, \"CarouselContainer\");\n$RefreshReg$(_c7, \"Slide\");\n$RefreshReg$(_c8, \"ImageContainer\");\n$RefreshReg$(_c9, \"FeatureImage\");\n$RefreshReg$(_c10, \"ContentOverlay\");\n$RefreshReg$(_c11, \"ContentContainer\");\n$RefreshReg$(_c12, \"InfoImageContainer\");\n$RefreshReg$(_c13, \"InfoFeatureImage\");\n$RefreshReg$(_c14, \"ContentTextContainer\");\n$RefreshReg$(_c15, \"FeatureDescription\");\n$RefreshReg$(_c16, \"CarouselControls\");\n$RefreshReg$(_c17, \"ControlButton\");\n$RefreshReg$(_c18, \"ProgressIndicator\");\n$RefreshReg$(_c19, \"IndicatorDot\");\n$RefreshReg$(_c20, \"ImageDebug\");\n$RefreshReg$(_c21, \"LoadingIndicator\");\n$RefreshReg$(_c22, \"LoadingText\");\n$RefreshReg$(_c23, \"LoadingSpinner\");\n$RefreshReg$(_c24, \"SwipeIndicator\");\n$RefreshReg$(_c25, \"FeatureModal\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/components/modals/FeatureModal.js\n"));

/***/ }),

/***/ "(pages-dir-browser)/__barrel_optimize__?names=FaCheck,FaChevronLeft,FaChevronRight,FaInfoCircle,FaTimes!=!./node_modules/react-icons/fa/index.mjs":
/*!*************************************************************************************************************************************!*\
  !*** __barrel_optimize__?names=FaCheck,FaChevronLeft,FaChevronRight,FaInfoCircle,FaTimes!=!./node_modules/react-icons/fa/index.mjs ***!
  \*************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Users_rjmacbookpro_Development_cymasphere_website_node_modules_react_icons_fa_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/react-icons/fa/index.mjs */ \"(pages-dir-browser)/./node_modules/react-icons/fa/index.mjs\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _Users_rjmacbookpro_Development_cymasphere_website_node_modules_react_icons_fa_index_mjs__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _Users_rjmacbookpro_Development_cymasphere_website_node_modules_react_icons_fa_index_mjs__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS9fX2JhcnJlbF9vcHRpbWl6ZV9fP25hbWVzPUZhQ2hlY2ssRmFDaGV2cm9uTGVmdCxGYUNoZXZyb25SaWdodCxGYUluZm9DaXJjbGUsRmFUaW1lcyE9IS4vbm9kZV9tb2R1bGVzL3JlYWN0LWljb25zL2ZhL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3RyIsInNvdXJjZXMiOlsiL1VzZXJzL3JqbWFjYm9va3Byby9EZXZlbG9wbWVudC9jeW1hc3BoZXJlLXdlYnNpdGUvbm9kZV9tb2R1bGVzL3JlYWN0LWljb25zL2ZhL2luZGV4Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiL1VzZXJzL3JqbWFjYm9va3Byby9EZXZlbG9wbWVudC9jeW1hc3BoZXJlLXdlYnNpdGUvbm9kZV9tb2R1bGVzL3JlYWN0LWljb25zL2ZhL2luZGV4Lm1qc1wiIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/__barrel_optimize__?names=FaCheck,FaChevronLeft,FaChevronRight,FaInfoCircle,FaTimes!=!./node_modules/react-icons/fa/index.mjs\n"));

/***/ })

}]);