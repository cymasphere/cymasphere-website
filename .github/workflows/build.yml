name: Build and Deploy

on:
  # Comment out push to main - we'll use deploy.yml for that
  # push:
  #   branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Build Next.js project
        run: bun run build
      
      - name: Install AWS CLI
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          
      - name: Configure AWS
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} && aws configure set region ${{ secrets.AWS_REGION }}
          
      - name: Deploy to AWS Lightsail
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        run: |
          # Publish image to Lightsail container service
          CONTAINER_SERVICE_NAME="cymasphere-web"
          
          # Create container deployment JSON
          echo '{
            "containers": {
              "app": {
                "image": "ghcr.io/cymasphere/cymasphere-website:latest",
                "command": ["/bin/sh", "/app/start.sh"],
                "ports": {
                  "80": "HTTP"
                },
                "environment": {
                  "NODE_ENV": "production",
                  "PORT": "3000",
                  "HOSTNAME": "0.0.0.0"
                }
              }
            },
            "publicEndpoint": {
              "containerName": "app",
              "containerPort": 3000,
              "healthCheck": {
                "healthyThreshold": 2,
                "unhealthyThreshold": 10,
                "timeoutSeconds": 10,
                "intervalSeconds": 30,
                "path": "/",
                "successCodes": "200-499"
              }
            }
          }' > container.json
          
          # Deploy the container
          aws lightsail create-container-service-deployment --service-name $CONTAINER_SERVICE_NAME --cli-input-json file://container.json || aws lightsail update-container-service --service-name $CONTAINER_SERVICE_NAME --power small --scale 1
          
          # Wait for deployment to complete and get status
          echo "Waiting for deployment to complete..."
          aws lightsail get-container-services --service-name $CONTAINER_SERVICE_NAME
          
          # Get Lightsail service status
          echo "Getting service deployment status"
          aws lightsail get-container-service-deployments --service-name $CONTAINER_SERVICE_NAME
      
      - name: Create .env.local file
        run: |
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.local
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.local
      
      - name: List directory structure (for debugging)
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "App directory contents:"
          ls -la app || echo "App directory not found"
      
      - name: Make build script executable
        run: chmod +x ./build-local.sh
        
      - name: Run enhanced build script
        run: ./build-local.sh
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1
      
      - name: Final Build Check
        run: |
          if [ -f ".next/server/pages/500.html" ]; then
            echo "✅ Build artifacts look good."
          else
            echo "❌ Build artifacts are missing."
            exit 1
          fi 